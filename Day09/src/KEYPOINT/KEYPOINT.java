package KEYPOINT;

public class KEYPOINT {

	
	// 클래스 : 객체를 만들기 위한 설계도. 필드부분과 메소드 부분으로 설계됨.
	// 객체 : 클래스의 설계가 반영되어 실제 메모리가 할당된 독립적인 개체.
	// 필드 : 맴버변수라고도 불리며 객체가 존재하는 동안 그안에 계속 유지되는 변수.
	// 메소드 : 함수, 명령어의 집합, 묶음, 객체 안에 존재하는 작은 부품.
	// 		    참조변수를 이용해 호출할 때 실행됨.
	// 가비지컬렉터 : new키워드로 heap영역에 생성된 객체를 참조하는 변수가 하나도 존재하지 않는 경우 해당 객체를 소멸시키는 역할

	
	//[객체지향 특징]
	//1.캡슐화(Encapsulation) : 데이터를 저장하는 변수와 문장의 집합인 메소드가 하나의 객체에 묶여 있는 성질
	//2.정보은닉(Information Hiding) : 객체의 상태정보를 저장하는 맴버변수에 객체 외부에서 접근하는 것을 막아서
	//								 객체가 잘못된 상태 정보를 가지게 되는걸 방지하는 기법. 맴버변수에 private 붙여놓기
	//3.상속 : 
	//4.다형성 : 
	
	//[메소드 오버로딩]
	//하나의 클래스 내부에 같은 이름의 메소드를 2개 이상 설계해 놓는 기법
	//!!주의사항 - 반드시 매개변수 타입이나 갯수를 다르게 지정해야 함.
}
